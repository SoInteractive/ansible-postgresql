---
- name: locate patronictl
  find:
    paths: /
    patterns: "patronictl"
    recurse: yes
  register: locationctl

- name: set location var
  set_fact:
    patronictl_location: "{{ locationctl.files[0].path }}"

- name: check cluster
  become_user: "{{ ansible_user }}"
  shell: "{{ patronictl_location }} -d etcd://127.0.0.1:2379 list cluster"
  when: "inventory_hostname == groups['postgresql'][0]"
  changed_when: false
  register: status

- debug:
    var: status

- name: get node master
  become_user: "{{ ansible_user }}"
  shell: "PGPASSWORD={{ postgresql_admin.pass }} psql -U {{ postgresql_admin.user }} -h {{ hostvars[inventory_hostname]['ansible_' + system_interface]['ipv4']['address'] }} -c 'SELECT pg_is_in_recovery()';"
  register: status
  changed_when: false

  until: status.rc == 0
  retries: 3

- name: set stdout var
  set_fact:
    node_status: "{{ status.stdout_lines[2] }}"

- name: set leader node var
  set_fact:
    leader_node: "{{ inventory_hostname }}"
  when: status.stdout_lines[2] | search("f")

- name: set leader node var globally
  set_fact:
    leader_node: "{{ inventory_hostname }}"

- name: test cluster - create database on leader
  ignore_errors: yes
  shell: "PGPASSWORD={{ postgresql_admin.pass }} psql -U {{ postgresql_admin.user }} -h {{ hostvars[inventory_hostname]['ansible_' + system_interface]['ipv4']['address'] }} -c 'CREATE DATABASE test';"
  changed_when: false
  when: "inventory_hostname == leader_node"

- name: test cluster - check if database exists on all nodes
  shell: "PGPASSWORD={{ postgresql_admin.pass }} psql -U {{ postgresql_admin.user }} -h {{ hostvars[inventory_hostname]['ansible_' + system_interface]['ipv4']['address'] }} -c \"SELECT datname FROM pg_catalog.pg_database WHERE datname='test'\";"
  changed_when: false

- name: test cluster - drop database on leader
  ignore_errors: yes
  shell: "PGPASSWORD={{ postgresql_admin.pass }} psql -U {{ postgresql_admin.user }} -h {{ hostvars[inventory_hostname]['ansible_' + system_interface]['ipv4']['address'] }} -c 'DROP DATABASE test';"
  changed_when: false
  when: "inventory_hostname == leader_node"
